#!/bin/bash
#
# Box download and load
#

BOX_CONFIG_FILE=$PISH_BOX_ROOT/$PISH_BOX/pish-config
BOX_CONFIG_PULLED=false
BOX_CONFIG_LOADED=false

BOX_USER_CONFIG_URL=git@github.com:harveyt/config.git

# ================================================================================
# Box pull
#
function box_pull_PREQ()
{
    requirement ssh_has_keys
    requirement ssh_known_hosts github.com
    requirement git_clone "$PISH_BOX_URL/$PISH_BOX" "$PISH_BOX_ROOT/$PISH_BOX"
}

function box_pull_DESC()
{
    echo "box '$PISH_BOX' is up to date"
}

function box_pull_TEST()
{
    local status=$BOX_CONFIG_PULLED
    BOX_CONFIG_PULLED=true
    $status
}

function box_pull_SHELL()
{
    cd $PISH_BOX_ROOT/$PISH_BOX
    git pull
}

# ================================================================================
# Fix the pish remote to be correct git style remote

function box_fix_pish_remote_DESC()
{
    echo 'pish has SSH git remote'
}

# TODO: Move to common header somewhere, sigh.
PISH_PROJECT_URL=git@github.com:harveyt/pish.git
PISH_PROJECT_ROOT=$HOME/Projects/pish
PISH_PROJECT_REMOTE=harveyt

function box_fix_pish_remote_TEST()
{
    local remote="$(cd $PISH_PROJECT_ROOT; git remote show -n $PISH_PROJECT_REMOTE | awk '$1 == "Fetch" && $2 == "URL:" { print $3 }')"
    [[ "$remote" == "$PISH_PROJECT_URL" ]]
}

function box_fix_pish_remote_SHELL()
{
    cd $PISH_PROJECT_ROOT
    git remote set-url $PISH_PROJECT_REMOTE $PISH_PROJECT_URL
}

# ================================================================================
# Box loader
#
function box_load_PREQ()
{
    requirement box_pull
    requirement box_fix_pish_remote
}

function box_load_DESC()
{
    echo "box '$PISH_BOX' is loaded"
}

function box_load_TEST()
{
    $BOX_CONFIG_LOADED
}

function box_load_LOCAL()
{
    if [[ ! -f $BOX_CONFIG_FILE ]]; then
	error "'$PISH_BOX' must have '$BOX_CONFIG_FILE'"
    fi

    # Load it
    . $BOX_CONFIG_FILE
    BOX_CONFIG_LOADED=true
}

# ================================================================================
# Box user config

function box_user_config_PREQ()
{
    requirement ssh_has_keys
}

function box_user_config_DESC()
{
    echo "box user config is present"
}

function box_user_config_TEST()
{
    test -d $HOME/bin
}

function box_user_config_install_config()
{
    if [[ ! -d $HOME/config ]]; then
	return
    fi
    for src in $HOME/config/.[^.]* $HOME/config/*
    do
	dst="$HOME/$(basename "$src")"

	if [[ -e "$dst" ]]; then
	    dst_orig="$dst-ORIG"
	    echo "WARNING: $dst saved as $dst_orig"
	    mv "$dst" "$dst-ORIG"
	fi
	mv "$src" "$dst"
    done
    rmdir $HOME/config
}

function box_user_config_install_ssh()
{
    if [[ ! -d $HOME/.ssh ]]; then
	return
    fi
    for src in $HOME/.ssh/*
    do
	dst="$HOME/lib/ssh/$(basename "$src")"
	if [[ -e "$dst" ]]; then
	    dst_orig="$dst-ORIG"
	    echo "WARNING: $dst saved as $dst_orig"
	    mv "$dst" "$dst-ORIG"
	fi
	mv "$src" "$dst"
    done
    rmdir $HOME/.ssh
    ln -s $HOME/lib/ssh $HOME/.ssh
}

function box_user_config_SHELL()
{
    cd $HOME
    mkdir -p $HOME/config
    git clone --origin=$USER $BOX_USER_CONFIG_URL $HOME/config

    box_user_config_install_config
    box_user_config_install_ssh
}
